<interface>
  <ethernet>
  {% for ethernet in network.ethernets %}
    <entry name="{{ ethernet.name }}">
      <{{ ethernet.type }}>
        <ndp-proxy>
          <enabled>{{ ethernet.ndpproxyenabled }}</enabled>
        </ndp-proxy>
        <lldp>
          <enable>{{ ethernet.lldpenabled }}</enable>
        </lldp>
        <dhcp-client>
          <create-default-route>{{ ethernet.dhcpdefaultroute }}</create-default-route>
        </dhcp-client>
        <interface-management-profile>{{ ethernet.interfacemgtprofilename }}</interface-management-profile>
      </{{ ethernet.type }}>
    </entry>
    {% endfor %}
  </ethernet>
</interface>
<profiles>
  <monitor-profile>
    <entry name="default">
      <interval>3</interval>
      <threshold>5</threshold>
      <action>wait-recover</action>
    </entry>
  </monitor-profile>
  <interface-management-profile>
  {% for profile in network.interfacemgtprofiles %}
    <entry name="{{ profile.name }}">
      <http>{{ profile.http }}</http>
      <https>{{ profile.https }}</https>
      <ssh>{{ profile.ssh }}</ssh>
      <telnet>{{ profile.telnet }}</telnet>
      <permitted-ip>
      {% for permittedip in profile.permittedips %}
        <entry name="{{ permittedip }}"/>
      {% endfor %}
      </permitted-ip>
      <ping>{{ profile.ping }}</ping>
    </entry>
    {% endfor %}
  </interface-management-profile>
</profiles>
<ike>
  <crypto-profiles>
    <ike-crypto-profiles>
      <entry name="default">
        <encryption>
          <member>aes-128-cbc</member>
          <member>3des</member>
        </encryption>
        <hash>
          <member>sha1</member>
        </hash>
        <dh-group>
          <member>group2</member>
        </dh-group>
        <lifetime>
          <hours>8</hours>
        </lifetime>
      </entry>
      <entry name="Suite-B-GCM-128">
        <encryption>
          <member>aes-128-cbc</member>
        </encryption>
        <hash>
          <member>sha256</member>
        </hash>
        <dh-group>
          <member>group19</member>
        </dh-group>
        <lifetime>
          <hours>8</hours>
        </lifetime>
      </entry>
      <entry name="Suite-B-GCM-256">
        <encryption>
          <member>aes-256-cbc</member>
        </encryption>
        <hash>
          <member>sha384</member>
        </hash>
        <dh-group>
          <member>group20</member>
        </dh-group>
        <lifetime>
          <hours>8</hours>
        </lifetime>
      </entry>
    </ike-crypto-profiles>
    <ipsec-crypto-profiles>
      <entry name="default">
        <esp>
          <encryption>
            <member>aes-128-cbc</member>
            <member>3des</member>
          </encryption>
          <authentication>
            <member>sha1</member>
          </authentication>
        </esp>
        <dh-group>group2</dh-group>
        <lifetime>
          <hours>1</hours>
        </lifetime>
      </entry>
      <entry name="Suite-B-GCM-128">
        <esp>
          <encryption>
            <member>aes-128-gcm</member>
          </encryption>
          <authentication>
            <member>none</member>
          </authentication>
        </esp>
        <dh-group>group19</dh-group>
        <lifetime>
          <hours>1</hours>
        </lifetime>
      </entry>
      <entry name="Suite-B-GCM-256">
        <esp>
          <encryption>
            <member>aes-256-gcm</member>
          </encryption>
          <authentication>
            <member>none</member>
          </authentication>
        </esp>
        <dh-group>group20</dh-group>
        <lifetime>
          <hours>1</hours>
        </lifetime>
      </entry>
    </ipsec-crypto-profiles>
    <global-protect-app-crypto-profiles>
      <entry name="default">
        <encryption>
          <member>aes-128-cbc</member>
        </encryption>
        <authentication>
          <member>sha1</member>
        </authentication>
      </entry>
    </global-protect-app-crypto-profiles>
  </crypto-profiles>
</ike>
<qos>
  <profile>
    <entry name="default">
      <class-bandwidth-type>
        <mbps>
          <class>
            <entry name="class1">
              <priority>real-time</priority>
            </entry>
            <entry name="class2">
              <priority>high</priority>
            </entry>
            <entry name="class3">
              <priority>high</priority>
            </entry>
            <entry name="class4">
              <priority>medium</priority>
            </entry>
            <entry name="class5">
              <priority>medium</priority>
            </entry>
            <entry name="class6">
              <priority>low</priority>
            </entry>
            <entry name="class7">
              <priority>low</priority>
            </entry>
            <entry name="class8">
              <priority>low</priority>
            </entry>
          </class>
        </mbps>
      </class-bandwidth-type>
    </entry>
  </profile>
</qos>
<virtual-router>
{% for route in network.virtualrouters %}
  <entry name="{{ route.name }}">
    <ecmp>
      <algorithm>
        <ip-modulo/>
      </algorithm>
    </ecmp>
    <protocol>
      <bgp>
        <routing-options>
          <graceful-restart>
            <enable>yes</enable>
          </graceful-restart>
        </routing-options>
        <enable>no</enable>
      </bgp>
      <rip>
        <enable>no</enable>
      </rip>
      <ospf>
        <enable>no</enable>
      </ospf>
      <ospfv3>
        <enable>no</enable>
      </ospfv3>
    </protocol>
    <routing-table>
      <ip>
        <static-route>
          {% for sroute in route.staticroutes %}
          <entry name="{{ sroute.name }}">
            <nexthop>
              <{{ sroute.nexthoptype }}>{{ sroute.nexthopvalue }}</{{ sroute.nexthoptype }}>
            </nexthop>
            <bfd>
              <profile>None</profile>
            </bfd>
            <path-monitor>
              <enable>no</enable>
              <failure-condition>any</failure-condition>
              <hold-time>2</hold-time>
            </path-monitor>
            {% if sroute.interface != "" %}
            <interface>{{ sroute.interface }}</interface>
            {% endif %}
            <metric>10</metric>
            <destination>{{ sroute.destination }}</destination>
            <route-table>
              <unicast/>
            </route-table>
          </entry>
            {% endfor %}
        </static-route>
      </ip>
    </routing-table>
    <interface>
      <member>{{ route.interface }}</member>
    </interface>
  </entry>
{% endfor %}
</virtual-router>
<dns-proxy>
{% for dnsproxy in network.dnsproxies %}
  <entry name="{{ dnsproxy.name }}">
    <default>
      <inheritance>
        <source>{{ dnsproxy.inheritedsource }}</source>
      </inheritance>
      <primary>inherited</primary>
    </default>
    <cache>
      <max-ttl>
        <enabled>no</enabled>
      </max-ttl>
      <enabled>yes</enabled>
    </cache>
    <tcp-queries>
      <enabled>no</enabled>
    </tcp-queries>
    <static-entries>
      {% for entry in dnsproxy.staticentries %}
      <entry name="{{ entry.name }}">
        <address>
        {% for address in entry.addresses %}
          <member>{{ address }}</member>
        {% endfor %}
        </address>
        <domain>{{ entry.domain }}</domain>
      </entry>
      {% endfor %}
    </static-entries>
    <enabled>yes</enabled>
  </entry>
{% endfor %}
</dns-proxy>
